{"version":3,"sources":["queue.js"],"names":["Queue","queue","isLooping","isPaused","loop","item","shift","length","add","push","clear","pause","duration","setTimeout"],"mappings":";;;;;;;AAAA;AACe,SAASA,KAAT,GAAiB;AAC5B,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,KAAhB;AACA,MAAIC,QAAQ,GAAG,KAAf;;AAEA,OAAKC,IAAL,GAAY,YAAY;AACpBF,IAAAA,SAAS,GAAG,IAAZ;AAEA,UAAMG,IAAI,GAAGJ,KAAK,CAAC,CAAD,CAAlB;AACAA,IAAAA,KAAK,CAACK,KAAN;AACA,UAAMD,IAAI,EAAV;;AAEA,QAAI,CAACJ,KAAK,CAACM,MAAP,IAAiBJ,QAArB,EAA+B;AAC3BD,MAAAA,SAAS,GAAG,KAAZ;AACA;AACH;;AAED,SAAKE,IAAL;AACH,GAbD;;AAeA,OAAKI,GAAL,GAAWH,IAAI,IAAI;AACf,QAAIF,QAAJ,EAAc;AAEdF,IAAAA,KAAK,CAACQ,IAAN,CAAWJ,IAAX;AAEA,QAAI,CAACH,SAAL,EAAgB,KAAKE,IAAL;AACnB,GAND;;AAQA,OAAKM,KAAL,GAAa,MAAM;AACfT,IAAAA,KAAK,GAAG,EAAR;AACH,GAFD;;AAIA,OAAKU,KAAL,GAAa,CAACC,QAAQ,GAAG,CAAZ,KAAkB;AAC3BT,IAAAA,QAAQ,GAAG,IAAX;AACAU,IAAAA,UAAU,CAAC,MAAOV,QAAQ,GAAG,KAAnB,EAA2BS,QAA3B,CAAV;AACH,GAHD;;AAKA,OAAKV,SAAL,GAAiBA,SAAjB;AACH,EAED;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"queue.d841efc1.js","sourceRoot":"..","sourcesContent":["// Loops and calls each function in a queue\nexport default function Queue() {\n    let queue = [];\n    let isLooping = false;\n    let isPaused = false;\n\n    this.loop = async () => {\n        isLooping = true;\n\n        const item = queue[0];\n        queue.shift();\n        await item();\n\n        if (!queue.length || isPaused) {\n            isLooping = false;\n            return;\n        }\n\n        this.loop();\n    };\n\n    this.add = item => {\n        if (isPaused) return;\n\n        queue.push(item);\n\n        if (!isLooping) this.loop();\n    };\n\n    this.clear = () => {\n        queue = [];\n    };\n\n    this.pause = (duration = 0) => {\n        isPaused = true;\n        setTimeout(() => (isPaused = false), duration);\n    };\n\n    this.isLooping = isLooping;\n}\n\n// export default class Queue {\n   \n//     constructor(){\n      \n//       this.data = [];\n//       this.rear = 0;\n//       this.size = 20;\n//     }\n    \n//     enqueue(element) {\n//         if (this.rear < this.size) {\n//            this.data[this.rear] = element;\n//            this.rear = this.rear + 1;\n//         }\n//    }\n//    length() {\n     \n//       return this.rear;\n//    }\n//    isEmpty() {\n    \n//      return this.rear === 0;\n//    }\n//    getFront() {\n    \n//      if(this.isEmpty() === false) {\n//          return this.data[0];\n//      }\n//    }\n//    getLast() {\n     \n//       if(this.isEmpty() === false) {\n        \n//            return this.data[ this.rear - 1 ] ;\n//       }\n//    }\n//    dequeue() {\n    \n//       if(this.isEmpty() === false) {\n           \n//            this.rear = this.rear-1;\n//            return this.data.shift();\n//       }\n//    }\n//    print() { \n//     for(let i =0; i < this.rear; i++) {\n//        console.log(this.data[i]);\n//      }\n//    }\n//     clear() {\n//        this.data.length = 0;\n//        this.rear = 0;\n//     }\n//  }"]}